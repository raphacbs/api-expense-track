name: CD
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Get Current Version
        id: get_version
        run: |
          echo "Current Project Version: ${{ secrets.PROJECT_VERSION }}"
          echo "::set-output name=VERSION::${{ secrets.PROJECT_VERSION }}"

      - name: Increment Version
        id: increment_version
        run: |
          CURRENT_VERSION="${{ steps.get_version.outputs.VERSION }}"
          if [[ ! "$CURRENT_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Resetting to 0.0.0"
            CURRENT_VERSION="0.0.0"
          fi
          IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
          VERSION_PARTS[2]=$((VERSION_PARTS[2] + 1))
          NEW_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
          echo "New version: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Set Project Version
        id: set_project_version
        run: echo "::set-output name=VERSION::${{ env.NEW_VERSION }}"

      - name: Update Maven Project Version
        run: |
          VERSION=${{ steps.set_project_version.outputs.VERSION }}
          mvn versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false -DallowSnapshots=false -B

      - name: Update application.properties with version
        run: |
          echo "version=${{ env.NEW_VERSION }}" >> src/main/resources/application.properties

      - name: Set Jar Filename
        run: echo "JAR_FILE=api-expense-track-${{ steps.set_project_version.outputs.VERSION }}.jar" >> $GITHUB_ENV

      - name: Verify Jar Filename
        run: echo "JAR_FILE = $JAR_FILE"
        env:
          JAR_FILE: ${{ env.JAR_FILE }}

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: raphacbs/api-expense-track
          tags: ${{ env.NEW_VERSION }}, latest

      - name: Install GitHub CLI
        run: |
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt-get update
          sudo apt-get install gh

      - name: Update Project Version Secret
        run: |
          echo "$NEW_VERSION" | gh secret set PROJECT_VERSION -b -
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Jenkins
        run: curl -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_PASSWORD }} http://diycompany.online:8080/job/EXPENSE-TRACK-DEV/build?token=expense-track-dev
