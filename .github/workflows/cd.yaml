name: CD
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Set Project Version
        id: set_project_version
        run: |
          NEW_VERSION="0.0.${GITHUB_RUN_NUMBER}"
          echo "::set-output name=VERSION::${NEW_VERSION}"

      - name: Update Maven Project Version
        run: |
          VERSION=${{ steps.set_project_version.outputs.VERSION }}
          mvn versions:set -DnewVersion="$VERSION" -DgenerateBackupPoms=false -DallowSnapshots=false -B

      - name: Update application.properties with version
        run: |
          echo "version=${{ steps.set_project_version.outputs.VERSION }}" >> src/main/resources/application.properties

      - name: Display Structure of Project
        run: tree ~

      - name: Set Jar Filename
        run: echo "JAR_FILE=api-expense-track-${{ steps.set_project_version.outputs.VERSION }}.jar" >> $GITHUB_ENV

      - name: Verify Jar Filename
        run: echo "JAR_FILE = $JAR_FILE"
        env:
          JAR_FILE: ${{ env.JAR_FILE }}

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Display Structure of Project
        run: tree ~

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: raphacbs/api-expense-track
          tags: ${{ steps.set_project_version.outputs.VERSION }}, latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Jenkins
        run: curl -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_PASSWORD }} http://diycompany.online:8080/job/EXPENSE-TRACK-DEV/build?token=expense-track-dev
